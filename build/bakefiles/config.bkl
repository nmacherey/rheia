<?xml version="1.0" ?>
<!-- Author : Nicolas Macherey (nm@graymat.fr) http://www.rheia-framework.com -->

<makefile>

	<!--====================================================================================================
		This is the main file for defining common options to all targets and projects for building Rheia
		Using bakefile.
	=====================================================================================================-->

    <!-- This first two variables have been made in order to check for Microsoft Visual Studio projects -->
    <set var="IS_MSVC_PRJ">
        $(FORMAT in ['msvc6prj','msevc4prj','msvs2003prj','msvs2005prj','msvs2008prj'])
    </set>
    <set var="IS_MSVC">
        $(IS_MSVC_PRJ=='1' or FORMAT=='msvc')
    </set>

    <!-- This var must be set to 1 when we are building a Rheia Library -->
    <set var="BUILDING_LIB" overwrite="0">0</set>
    
    <!-- Default compiler value for CPP compilation -->
    <set var="CPP_DEFAULT_VALUE">
        <if cond="FORMAT=='borland'">
            cpp32 -Sr -oCON
        </if>
        <if cond="FORMAT=='mingw'">
            $(DOLLAR)(CC) -E
        </if>
        <if cond="FORMAT=='msvc'">
            $(DOLLAR)(CC) /EP /nologo
        </if>
        <if cond="FORMAT=='watcom'">
            $(DOLLAR)(CC) -p
        </if>
    </set>
    
    <!-- Option used to define the C Preprocessor -->
    <option name="CPP">
        <default-value>
            $(CPP_DEFAULT_VALUE)
        </default-value>
        <description>
            The C preprocessor
        </description>
    </option>

    <!-- FIXME : This shall not be there as Rheia Libraries can only be used in a share mode -->
    <option name="SHARED">
        <values>0,1</values>
        <values-description>,DLL</values-description>
        <default-value>1</default-value>
        <description>
            What type of library to build?
        </description>
    </option>

    <!-- Don't include ANSI configuration in project files, it's going to be
         eventually removed anyway and it only doubles the number of build
         configs in projects: 
         The Unicode option is used to specify if we are building Rheia using an unicode
         Library. Note that must fit in with the option used for compiling your wxWidget
         Library.
    -->
    <if cond="IS_MSVC_PRJ=='1'">
        <set var="UNICODE">1</set>
    </if>
    <if cond="IS_MSVC_PRJ=='0'">
        <option name="UNICODE">
            <values>0,1</values>
            <values-description>,Unicode</values-description>
            <default-value>1</default-value>
            <description>
                Compile Unicode build of Rheia Framework ?
            </description>
        </option>
    </if>
    
    <!-- Add an option to use the MSLU libray if we are not in autoconf and watcom 
        FIXME : Check if this is really interesting it has been taken from wxWidgets
        bakefiles.
    -->
    <if cond="FORMAT!='autoconf' and FORMAT!='watcom'">
        <option name="MSLU">
            <values>0,1</values>
            <default-value>0</default-value>
            <description>
                Use MSLU library when building Unicode version.
            </description>
        </option>
    </if>
    <if cond="FORMAT=='autoconf' or FORMAT=='watcom'">
        <set var="MSLU">0</set>
    </if>

    <!-- Add an option for those who need to compile rheia in debug mode -->
    <option name="BUILD">
        <values>debug,release</values>
        <values-description>Debug,Release</values-description>
        <default-value>release</default-value>
        <description>
            Type of compiled binaries
        </description>
    </option>
    
    <!-- Under windows we need to add this option in order to use the proper CPU target and paths -->
    <if cond="FORMAT=='msvc'">
        <option name="TARGET_CPU">
            <default-value>$(DOLLAR)(CPU)</default-value>
            <description>
The target processor architecture must be specified when it is not X86.
This does not affect the compiler output, so you still need to make sure
your environment is set up appropriately with the correct compiler in the
PATH. Rather it affects some options passed to some of the common build
utilities such as the resource compiler and the linker.
Accepted values: AMD64, IA64.
            </description>
        </option>
    </if>
    <if cond="FORMAT!='msvc'">
        <set var="TARGET_CPU"/>
    </if>

    <!--
        For MSVC enable debug information in all builds: it is needed to be
        able to debug the crash dumps produced by wxDebugReport and as it
        generates it in separate PDB files it doesn't cost us much to enable it
        (except for disk space...).
     -->
    <set var="DEBUG_INFO_DEFAULT">
        <if cond="IS_MSVC=='1'">1</if>
        <if cond="IS_MSVC=='0'">default</if>
    </set>

    <option name="DEBUG_INFO">
        <values>0,1,default</values>
        <default-value>0</default-value>
        <description>
Should debugging info be included in the executables? The default value
"default" means that debug info will be included if BUILD=debug
and not included if BUILD=release.
        </description>
    </option>

    <option name="DEBUG_FLAG">
        <values>0,1,default</values>
        <default-value>0</default-value>
        <description>
Should Rheia be compiled using RHEIA_DEBUG flag in order to show additional
informations about the application run time such as log windows and others.
By default, if BUILD=debug it shall be enabled, but this option is here if
you still want to have it when BUILD=release. Default means that the behaviour
is as explained here.       
	</description>
    </option>
	
	<option name="USE_MACOS">
		<values>0,1</values>
		<default-value>0</default-value>
		<description>
			MacOSX Platform       
		</description>
	</option>


    <!-- For those like me :-) who prefer to use the "unstable" wxversion, this option is here for that -->
    <option name="USE_WX29">
        <values>0,1,default</values>
        <default-value>1</default-value>
        <description>
Use this option if you want to link against wxWidgets libraries version 2.9.x        
	</description>
    </option>


    <!-- Which crt shall be used under MSVC -->
    <if cond="FORMAT=='msvc'">
        <option name="DEBUG_RUNTIME_LIBS">
            <values>0,1,default</values>
            <default-value>default</default-value>
            <description>
Link against debug (e.g. msvcrtd.dll) or release (msvcrt.dll) RTL?
Default is to use debug CRT if and only if BUILD==debug.
            </description>
        </option>
    </if>
    <if cond="FORMAT!='msvc'">
        <set var="DEBUG_RUNTIME_LIBS">default</set>
    </if>

    <!-- Under watcom we shall always build rheia in a monolithic way -->
    <set var="MONOLITHIC_DEFAULT">
        <if cond="FORMAT=='watcom'">1</if>
        <if cond="FORMAT!='watcom'">0</if>
    </set>
    <option name="MONOLITHIC">
        <values>0,1</values>
        <values-description>Multilib,Monolithic</values-description>
        <default-value>$(MONOLITHIC_DEFAULT)</default-value>
        <description>
            Multiple libraries or single huge monolithic one?
        </description>
    </option>
	
	<option name="WXMONOLITHIC">
        <values>0,1</values>
        <values-description>Multilib,Monolithic</values-description>
        <default-value>$(MONOLITHIC_DEFAULT)</default-value>
        <description>
            Shall we link against the monolithic wxWidgets library or not
        </description>
    </option>

    <!-- Add an option for those who don't care to compile the irrlicht library -->
    <option name="USE_IRRLICHT">
        <values>0,1</values>
        <default-value>1</default-value>
        <description>
            Build irrlicht library ?
        </description>
    </option>

    <!-- Add an option for those who don't care to compile the plplot and wxplplot libraries -->
    <option name="USE_PLPLOT">
        <values>0,1</values>
        <default-value>1</default-value>
        <description>
            Build plplot libraries ?
        </description>
    </option>

    <!-- Add an option in order to enable or disable exceptions from generated code -->
    <option name="USE_EXCEPTIONS">
        <values>0,1</values>
        <default-value>1</default-value>
        <description>
            Enable exceptions in compiled code.
        </description>
    </option>

    <!-- Add an option for the usage of real time type informations -->
    <option name="USE_RTTI">
        <values>0,1</values>
        <default-value>1</default-value>
        <description>
            Enable run-time type information (RTTI) in compiled code.
        </description>
    </option>
    
    <!-- Enable threading in compiled code -->
    <option name="USE_THREADS">
        <values>0,1</values>
        <default-value>1</default-value>
        <description>
            Enable threading in compiled code.
        </description>
    </option>
    
    <!-- Is this an official build from rheia developpers or not -->
    <option name="OFFICIAL_BUILD">
        <values>0,1</values>
        <default-value>0</default-value>
        <description>
            Is this official build by Rheia Framework's developers?
        </description>
    </option>

    <!-- Specify a vendor name if required so that people can give their own name to rheia libraries -->
    <option name="VENDOR">
        <default-value>custom</default-value>
        <description>
            Use this to name your customized DLLs differently
        </description>
    </option>

    <!-- These basically do what vendor does in the places it didn't. -->
    <!-- They should all be unified under some suitable descriptor    -->
    <option name="RHEIA_FLAVOUR">
        <default-value></default-value>
    </option>
    <option name="RHEIA_LIB_FLAVOUR">
        <default-value></default-value>
    </option>

    <option name="CFG">
        <default-value></default-value>
        <description>
Name of your custom configuration. This affects directory
where object files are stored as well as the location of
compiled .lib files.
        </description>
    </option>

    <!-- ================================================================== -->
    <!--                             Autoconf                               -->
    <!-- ================================================================== -->
    
    <!-- Here goes all options specific to autoconf -->
    <if cond="FORMAT=='autoconf'">
        <option name="TOOLKIT"/>
        <option name="TOOLKIT_LOWERCASE"/>
        <option name="TOOLKIT_VERSION"/>
        <option name="TOOLCHAIN_NAME"/>
        <option name="TOOLCHAIN_FULLNAME"/>
        <option name="EXTRALIBS"/>
        <option name="CXXWARNINGS"/>
	    <option name="WXCONFIG_PATH"/>
        <option name="HOST_SUFFIX"/>
        <option name="DYLIB_RPATH_INSTALL"/>
        <option name="DYLIB_RPATH_POSTLINK"/>
        <option name="SAMPLES_RPATH_FLAG"/>

        <set var="TOP_SRCDIR">$(top_srcdir)/</set>
        <set var="RUNTIME_LIBS">dynamic</set>
        <set var="RHEIATOPDIR"/> <!-- to be overriden on bakefile cmd line -->
        <option name="rheia_top_builddir"/>
    </if>


    <!-- ================================================================== -->
    <!--                     windows/dos/os2 compilers                      -->
    <!-- ================================================================== -->

    <if cond="FORMAT!='autoconf'">
        <option name="RUNTIME_LIBS">
            <values>dynamic,static</values>
            <default-value>dynamic</default-value>
            <description>
Version of C runtime library to use. You can change this to
static if SHARED=0, but it is highly recommended to not do
it if SHARED=1 unless you know what you are doing.
            </description>
        </option>

        <set var="RHEIATOPDIR"/> <!-- to be overriden on bakefile cmd line -->

        <set var="TOOLKIT" overwrite="0">
            <if cond="FORMAT=='msevc4prj'">WINCE</if>
            <if cond="FORMAT=='msvs2005prj' and MSVS_PLATFORMS=='pocketpc2003'">WINCE</if>
            <if cond="FORMAT=='msvs2008prj' and MSVS_PLATFORMS=='pocketpc2003'">WINCE</if>
            <if cond="FORMAT=='msvs2005prj' and MSVS_PLATFORMS=='win32'">MSW</if>
            <if cond="FORMAT=='msvs2008prj' and MSVS_PLATFORMS=='win32'">MSW</if>
            <if cond="FORMAT not in ['msevc4prj','msvs2005prj','msvs2008prj'] and PLATFORM_WIN32=='1'">MSW</if>
            <if cond="PLATFORM_MSDOS=='1'">MGL</if>
            <if cond="PLATFORM_OS2=='1'">PM</if>
        </set>
        <set var="TOOLKIT_LOWERCASE">$(TOOLKIT.lower())</set>
        <set var="TOOLKIT_VERSION"/>
        <set var="HOST_SUFFIX"/>
        <set var="EXTRACFLAGS"/>
        <set var="EXTRALIBS"/>
        <if cond="BUILDING_LIB=='1'">
            <set-srcdir>../..</set-srcdir>
        </if>
        <set var="TOP_SRCDIR">$(SRCDIR)/$(RHEIATOPDIR)</set>
    </if>

    <if cond="FORMAT=='mingw'">
        <option name="GCC_VERSION">
            <values>3,2.95</values>
            <default-value>3</default-value>
            <description>
Set the version of your Mingw installation here.
"3" ...... this is for Mingw 2.0 or newer (comes with gcc3)
"2.95" ... for Mingw 1.1 or any of the older versions
            </description>
        </option>
        <set var="GCCFLAGS">
            <if cond="GCC_VERSION=='2.95'">-fvtable-thunks</if>
        </set>
        <set var="EXTRACFLAGS">$(GCCFLAGS) -DHAVE_W32API_H</set>
    </if>


    <!-- ================================================================== -->
    <!--            Project files - hardcode some defaults                  -->
    <!-- ================================================================== -->

    <if cond="FORMAT_SUPPORTS_CONDITIONS=='0'">
        <set var="RUNTIME_LIBS">dynamic</set>
        <set var="OFFICIAL_BUILD">0</set>
        <set var="USE_IRRLICHT">1</set>
        <set var="USE_PLPLOT">1</set>
        <set var="MONOLITHIC">0</set>
        <set var="WXMONOLITHIC">0</set>
        <set var="USE_EXCEPTIONS">1</set>
        <set var="USE_RTTI">1</set>
        <set var="USE_THREADS">1</set>
        <set var="DEBUG_INFO">$(DEBUG_INFO_DEFAULT)</set>
        <set var="DEBUG_FLAG">default</set>
        <set var="MSLU">0</set>
    </if>


    <!-- DigitalMars make is braindead, it doesn't have conditional
         processing: -->
    <if cond="FORMAT=='dmars'">
        <set var="RUNTIME_LIBS">static</set>
        <set var="BUILD">debug</set>
        <set var="SHARED">0</set>
        <set var="UNICODE">1</set>
    </if>

    <!-- No need for wxUniv on embedded devices (yet): -->
    <if cond="FORMAT=='msevc4prj' or (FORMAT=='msvs2005prj' and MSVS_PLATFORMS=='pocketpc2003') or (FORMAT=='msvs2008prj' and MSVS_PLATFORMS=='pocketpc2003')">
        <set var="WXUNIV">0</set>
        <!-- Uploading debug reports from PDAs seems impractical -->
        <set var="USE_QA">0</set>
        <set var="MONOLITHIC">1</set> <!-- sic! -->
        <!-- RTTI and exceptions need separate cccrtti.lib with eVC4 -->
        <if cond="FORMAT=='msevc4prj'">
            <set var="USE_RTTI">0</set>
            <set var="USE_EXCEPTIONS">0</set>
        </if>
    </if>

    <!-- Need for wxUniv within wxMGL: -->
    <if cond="FORMAT!='autoconf' and TOOLKIT=='MGL'">
        <set var="USE_THREADS">0</set>
        <set var="RUNTIME_LIBS">static</set>
    </if>

</makefile>
