<?xml version="1.0" ?>
<!-- Author : Nicolas Macherey (nm@graymat.fr) http://www.rheia-framework.com -->

<makefile>

    <requires version="0.2.7"/>

    <!-- bakefile modules we need: -->
    <using module="datafiles"/>

    <!-- load python module with rheia helpers: -->
    <using module="rheia"/>

    <!-- DFE: Add a platform meaning regular MacOS (not OS X) -->
    <if cond="FORMAT=='autoconf'">
        <option name="PLATFORM_MACOS"/>
    </if>
    <if cond="FORMAT!='autoconf'">
        <set var="PLATFORM_MACOS">0</set>
    </if>

    <include file="config.bkl"/>

    <!-- wxWidgets version numbers logic: -->
    <include file="version.bkl"/>
    
    <!-- list of files sorted into categories: -->
    <include file="files.bkl"/>

    <!-- ================================================================== -->
    <!--                     Names of libraries and DLLs:                   -->
    <!-- ================================================================== -->

    <set var="PORTNAME">
        $(TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
    </set>

    <set var="RHEIABASEPORT">
        <if cond="TOOLKIT=='MAC'">_carbon</if>
    </set>

    <set var="COMPILERORGCC">
        <if cond="isdefined('COMPILER')">$(COMPILER)</if>
        <if cond="not isdefined('COMPILER')">gcc</if>
    </set>
    <set var="RHEIACOMPILER">
        <if cond="PLATFORM_WIN32=='1'">_$(COMPILERORGCC)</if>
    </set>

    <set var="VENDORTAG">
        <if cond="PLATFORM_WIN32=='1' and OFFICIAL_BUILD=='1'"></if>
        <if cond="PLATFORM_WIN32=='1' and OFFICIAL_BUILD=='0'">_$(VENDOR)</if>
    </set>

    <!-- debug suffix used for Windows libraries which use debug CRT -->
    <set var="RHEIADEBUGFLAG">
        <if cond="BUILD=='debug' and DEBUG_RUNTIME_LIBS=='default'">d</if>
        <if cond="DEBUG_RUNTIME_LIBS=='1'">d</if>
    </set>
    <set var="RHEIAUNICODEFLAG">
        <!-- WinCE is Unicode-only platform: -->
        <if cond="UNICODE=='1' and FORMAT!='msevc4prj'">u</if>
    </set>
    <set var="RHEIA_U_D_SUFFIX">
        $(RHEIAUNICODEFLAG)$(RHEIADEBUGFLAG)
    </set>
    <set var="RHEIANAMESUFFIX">
        $(RHEIA_U_D_SUFFIX)$(RHEIA_LIB_FLAVOUR)
    </set>

    <if cond="FORMAT=='autoconf'">
        <set var="RHEIANAMEPREFIX">rheia_base$(RHEIABASEPORT)</set>
        <set var="RHEIANAMEPREFIXGUI">rheia_$(PORTNAME)</set>
        <set var="RHEIAVERSIONTAG">-$(RHEIA_RELEASE)</set>
    </if>
    <if cond="FORMAT!='autoconf'">
        <set var="RHEIANAMEPREFIX">
            rheiabase$(RHEIABASEPORT)$(RHEIA_RELEASE_NODOT)
        </set>
        <set var="RHEIANAMEPREFIXGUI">
            rheia$(PORTNAME)$(RHEIA_RELEASE_NODOT)</set>
        <set var="RHEIAVERSIONTAG"></set>
    </if>
    <set var="RHEIADLLNAMEPREFIX">
        <if cond="PLATFORM_WIN32=='1'">
            rheiabase$(RHEIABASEPORT)$(RHEIAWIN32DLLVERSION)
        </if>
        <if cond="PLATFORM_WIN32=='0'">$(RHEIANAMEPREFIX)</if>
    </set>
    <set var="RHEIADLLNAMEPREFIXGUI">
        <if cond="PLATFORM_WIN32=='1'">
            rheia$(PORTNAME)$(RHEIAWIN32DLLVERSION)
        </if>
        <if cond="PLATFORM_WIN32=='0'">$(RHEIANAMEPREFIXGUI)</if>
    </set>
    <set var="RHEIADLLVERSIONTAG">
        <if cond="PLATFORM_WIN32=='1'"></if>
        <if cond="PLATFORM_WIN32=='0'">$(RHEIAVERSIONTAG)</if>
    </set>


    <!-- =============================================================== -->
    <!--                    Names of component libraries:                -->
    <!-- =============================================================== -->

    <set var="RHEIALIB_IRRLICHT">
        <if cond="USE_IRRLICHT=='1'">$(mk.evalExpr(rheia.mkLibName('irrlicht')))</if>
    </set>
    <set var="RHEIALIB_PLPLOT">
        <if cond="USE_PLPLOT=='1'">$(mk.evalExpr(rheia.mkLibName('plplot')))</if>
    </set>
    <set var="RHEIALIB_WXPLPLOT">
        <if cond="USE_PLPLOT=='1'">$(mk.evalExpr(rheia.mkLibName('wxplplot')))</if>
    </set>
    <set var="RHEIALIB_WEBCONNECT">
        $(mk.evalExpr(rheia.mkLibName('webconnect')))
    </set>
    <set var="RHEIALIB_UTILS">
        <if cond="MONOLITHIC=='0'">$(mk.evalExpr(rheia.mkLibName('utils')))</if>
    </set>
    <set var="RHEIALIB_BASE">
        <if cond="MONOLITHIC=='0'">$(mk.evalExpr(rheia.mkLibName('base')))</if>
    </set>
    <set var="RHEIALIB_LOGGERS">
        <if cond="MONOLITHIC=='0'">$(mk.evalExpr(rheia.mkLibName('loggers')))</if>
    </set>
    <set var="RHEIALIB_PACKAGEMGT">
        <if cond="MONOLITHIC=='0'">$(mk.evalExpr(rheia.mkLibName('packagemgt')))</if>
    </set>
    <set var="RHEIALIB_WORKSPACEMGT">
        <if cond="MONOLITHIC=='0'">$(mk.evalExpr(rheia.mkLibName('workspacemgt')))</if>
    </set>
    <set var="RHEIALIB_EDITOR">
        <if cond="MONOLITHIC=='0'">$(mk.evalExpr(rheia.mkLibName('editor')))</if>
    </set>
    <set var="RHEIALIB_PYTHON">
        <if cond="MONOLITHIC=='0'">$(mk.evalExpr(rheia.mkLibName('python')))</if>
    </set>
    <set var="RHEIALIB_MONOLITHIC">
        <if cond="MONOLITHIC=='1'">$(mk.evalExpr(rheia.mkLibName('mono')))</if>
    </set>

    <!-- =============================================================== -->
    <!--             Where to store built libraries and objects:         -->
    <!-- =============================================================== -->

    <set var="DIR_SUFFIX_CPU">
        <if cond="FORMAT=='msevc4prj'">_$(CPU)</if>
        <if cond="TARGET_CPU=='amd64'">_amd64</if>
        <if cond="TARGET_CPU=='AMD64'">_amd64</if>
        <if cond="TARGET_CPU=='ia64'">_ia64</if>
        <if cond="TARGET_CPU=='IA64'">_ia64</if>
    </set>

    <if cond="FORMAT!='autoconf'">
        <set var="RHEIADLLFLAG">
            <if cond="SHARED=='1'">dll</if>
        </set>
        <set var="CFG_NAME_PART">
            $(PORTNAME)$(RHEIA_U_D_SUFFIX)$(RHEIADLLFLAG)$(CFG)
        </set>

        <!-- NB: this is make_var so that it can be overriden on command line
                 like this: nmake -f makefile.vc COMPILER_PREFIX=vc6 -->
        <set var="COMPILER_PREFIX" make_var="1">$(COMPILER)</set>

        <set var="OBJS" make_var="1">
            $(COMPILER_PREFIX)_$(CFG_NAME_PART)$(DIR_SUFFIX_CPU)
        </set>

        <set var="BUILDDIR">$(OBJS)</set>
    </if>

    <set var="LIBTYPE_SUFFIX" make_var="1">
        <if cond="FORMAT!='autoconf' and SHARED=='0' and PLATFORM_WIN32=='1'">lib</if>
        <if cond="FORMAT!='autoconf' and SHARED=='1' and PLATFORM_WIN32=='1'">dll</if>
        <if cond="FORMAT=='watcom' and SHARED=='0' and PLATFORM_WIN32=='0'">$(TOOLKIT_LOWERCASE)_lib</if>
        <if cond="FORMAT=='watcom' and SHARED=='1' and PLATFORM_WIN32=='0'">$(TOOLKIT_LOWERCASE)_dll</if>
    </set>

    <set var="LIBDIRNAME" make_var="1">
        <if cond="FORMAT=='autoconf'">$(rheia_top_builddir)/lib</if>
        <if cond="FORMAT!='autoconf'">
            $(nativePaths(TOP_SRCDIR))lib$(DIRSEP)$(COMPILER_PREFIX)$(DIR_SUFFIX_CPU)_$(LIBTYPE_SUFFIX)$(CFG)
        </if>
    </set>

    <if cond="FORMAT!='autoconf'">
        <set var="SETUPHDIR" make_var="1">
            $(LIBDIRNAME)\$(PORTNAME)$(RHEIA_U_D_SUFFIX)
        </set>
    </if>



    <!-- =============================================================== -->
    <!--             COMMON VARIABLES FOR TEMPLATES                      -->
    <!-- =============================================================== -->
	
    <!-- Check if we generate or not debug information -->
    <set var="DEBUGINFO">
        <if cond="BUILD=='debug' and DEBUG_INFO=='default'">on</if>
        <if cond="DEBUG_INFO=='1'">on</if>
        <if cond="BUILD=='release' and DEBUG_INFO=='default'">off</if>
        <if cond="DEBUG_INFO=='0'">off</if>
    </set>

    <!-- Use debug runtime libs or not -->
    <set var="DEBUGRUNTIME">
        <if cond="DEBUG_RUNTIME_LIBS=='default' and BUILD=='debug'">on</if>
        <if cond="DEBUG_RUNTIME_LIBS=='default' and BUILD=='release'">off</if>
        <if cond="DEBUG_RUNTIME_LIBS=='0'">off</if>
        <if cond="DEBUG_RUNTIME_LIBS=='1'">on</if>
    </set>


    <set var="OPTIMIZEFLAG">
        <if cond="BUILD=='debug'">off</if>
        <if cond="BUILD=='release'">speed</if>
    </set>
    <set var="EXCEPTIONSFLAG">
        <if cond="USE_EXCEPTIONS=='1'">on</if>
        <if cond="USE_EXCEPTIONS=='0'">off</if>
    </set>
    <set var="RTTIFLAG">
        <if cond="USE_RTTI=='1'">on</if>
        <if cond="USE_RTTI=='0'">off</if>
    </set>

    <set var="THREADSFLAG">
        <if cond="USE_THREADS=='1'">multi</if>
        <if cond="USE_THREADS=='0'">single</if>
    </set>

    <set var="DEBUG_DEFINE">
        <if cond="DEBUG_FLAG=='1'">RHEIA_DEBUG</if>
    </set>

    <set var="NDEBUG_DEFINE">
        <if cond="FORMAT!='autoconf' and DEBUG_RUNTIME_LIBS=='default' and BUILD=='release'">NDEBUG</if>
        <if cond="FORMAT!='autoconf' and DEBUG_RUNTIME_LIBS=='0'">NDEBUG</if>
    </set>

    <!-- does not cover all cases, but better than nothing -->
    <set var="NO_VC_CRTDBG">
        <if cond="FORMAT=='msvc' and BUILD=='debug' and DEBUG_RUNTIME_LIBS=='0'">__NO_VC_CRTDBG__</if>
        <if cond="FORMAT=='msvc' and BUILD=='release' and DEBUG_FLAG=='1'">__NO_VC_CRTDBG__</if>
    </set>

    <!-- fill for the specific case of the format/compiler -->
    <set var="WIN32_WINNT">
        <if cond="FORMAT=='dmars' or FORMAT=='dmars_smake'">_WIN32_WINNT=0x0400</if>
    </set>

    <set var="LINK_TARGET_CPU">
        <if cond="TARGET_CPU=='amd64'">/MACHINE:X64</if>
        <if cond="TARGET_CPU=='AMD64'">/MACHINE:X64</if>
        <if cond="TARGET_CPU=='ia64'">/MACHINE:IA64</if>
        <if cond="TARGET_CPU=='IA64'">/MACHINE:IA64</if>
    </set>
    
    <!-- Set up some wx-widgets related variables -->
    <set var="WXVERSION">
        <if cond="USE_WX29=='1'">29</if>
	<if cond="USE_WX29=='0'">28</if>
    </set>    
    <set var="WXCONFIG_OPTIONS">
        <if cond="USE_WX29=='1'">all</if>
	<if cond="USE_WX29=='0'">std,stc,xrc,aui,propgrid,richtext</if>
    </set>   
 
    <set var="WXCONFIG_DBG_FLAG">
        <if cond="DEBUG_FLAG=='1'">--debug=yes</if>
	<if cond="DEBUG_FLAG=='0'">--debug=no</if>
    </set>   

    <template id="wxlibs">
        <!-- wx system libraries on windows: -->
        <if cond="FORMAT!='autoconf' and PLATFORM_WIN32=='1' and UNICODE=='1' and DEBUG=='0'">
            <sys-lib>wxmsw$(WXVERSION)uh_richtext</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)uh_xrc</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)uh_aui</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)uh_media</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)uh_net</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)uh_xml</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)uh_adv</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)uh_html</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)uh_core</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)uh_stc</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)uh_propgrid</sys-lib>
            <sys-lib>wxbase$(WXVERSION)uh</sys-lib>
            <sys-lib>wxpngh</sys-lib>
            <sys-lib>wxjpegh</sys-lib>
            <sys-lib>wxtiffh</sys-lib>
            <sys-lib>wxregexuh</sys-lib>
            <sys-lib>wxzlibh</sys-lib>
            <sys-lib>wxexpath</sys-lib>
        </if>
        <if cond="FORMAT!='autoconf' and PLATFORM_WIN32=='1' and UNICODE=='1' and DEBUG=='1'">
            <sys-lib>wxmsw$(WXVERSION)ud_richtext</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)ud_xrc</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)ud_aui</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)ud_media</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)ud_net</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)ud_xml</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)ud_adv</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)ud_html</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)ud_core</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)ud_stc</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)ud_propgrid</sys-lib>
            <sys-lib>wxbase$(WXVERSION)ud</sys-lib>
            <sys-lib>wxpngd</sys-lib>
            <sys-lib>wxjpegd</sys-lib>
            <sys-lib>wxtiffd</sys-lib>
            <sys-lib>wxregexud</sys-lib>
            <sys-lib>wxzlibd</sys-lib>
            <sys-lib>wxexpatd</sys-lib>
        </if>
        <if cond="FORMAT!='autoconf' and PLATFORM_WIN32=='1' and UNICODE=='0' and DEBUG=='0'">
            <sys-lib>wxmsw$(WXVERSION)h_richtext</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)h_xrc</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)h_aui</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)h_media</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)h_net</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)h_xml</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)h_adv</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)h_html</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)h_core</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)h_stc</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)h_propgrid</sys-lib>
            <sys-lib>wxbase$(WXVERSION)h</sys-lib>
            <sys-lib>wxpngh</sys-lib>
            <sys-lib>wxjpegh</sys-lib>
            <sys-lib>wxtiffh</sys-lib>
            <sys-lib>wxregexh</sys-lib>
            <sys-lib>wxzlibh</sys-lib>
            <sys-lib>wxexpath</sys-lib>
        </if>
        <if cond="FORMAT!='autoconf' and PLATFORM_WIN32=='1' and UNICODE=='0' and DEBUG=='1'">
            <sys-lib>wxmsw$(WXVERSION)d_richtext</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)d_xrc</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)d_aui</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)d_media</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)d_net</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)d_xml</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)d_adv</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)d_html</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)d_core</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)d_stc</sys-lib>
            <sys-lib>wxmsw$(WXVERSION)d_propgrid</sys-lib>
            <sys-lib>wxbase$(WXVERSION)d</sys-lib>
            <sys-lib>wxpngd</sys-lib>
            <sys-lib>wxjpegd</sys-lib>
            <sys-lib>wxtiffd</sys-lib>
            <sys-lib>wxregexd</sys-lib>
            <sys-lib>wxzlibd</sys-lib>
            <sys-lib>wxexpatd</sys-lib>
        </if>
	<if cond="FORMAT=='autoconf'">
	    <cxxflags>`$(WXCONFIG_PATH)/wx-config --cflags`</cxxflags>
	    <ldflags>`$(WXCONFIG_PATH)/wx-config $(WXCONFIG_DBG_FLAG) --libs $(WXCONFIG_OPTIONS)`</ldflags>
	</if>
    </template>

    <template id="pythonlibs">
	<if cond="FORMAT=='autoconf'">
	    <cxxflags>`python-config --cflags`</cxxflags>
	    <ldflags>`python-config --libs`</ldflags>
	</if>
    </template>

    <template id="xmllibs">
	<if cond="FORMAT=='autoconf'">
	    <cxxflags>`xml2-config --cflags`</cxxflags>
	    <ldflags>`xml2-config --libs`</ldflags>
	</if>
    </template>

    <!-- =============================================================== -->
    <!--                        Templates for libs:                      -->
    <!-- =============================================================== -->
    <set var="FPIC_FLAGS">
	    <if cond="FORMAT=='autoconf' and PLATFORM_WIN32=='0'">-fPIC</if>
    </set>
    
    <!-- Here goes all common settings common to all compilation options -->
    <template id="common_settings" template="wxlibs,xmllibs">
        <debug-info>$(DEBUGINFO)</debug-info> 
        <debug-runtime-libs>$(DEBUGRUNTIME)</debug-runtime-libs>
        <optimize>$(OPTIMIZEFLAG)</optimize>
        <threading>$(THREADSFLAG)</threading>
        <runtime-libs>$(RUNTIME_LIBS)</runtime-libs>
        <cxx-rtti>$(RTTIFLAG)</cxx-rtti>
        <cxx-exceptions>$(EXCEPTIONSFLAG)</cxx-exceptions>
        <if cond="FORMAT!='autoconf'">
            <cppflags>$(EXTRACFLAGS)</cppflags>
        </if>
        <cppflags>$(FPIC_FLAGS)</cppflags>
        <define>$(NO_VC_CRTDBG)</define>
        <define>$(WIN32_WINNT)</define>
        <if cond="FORMAT=='msvc'">
            <ldflags>$(LINK_TARGET_CPU)</ldflags>
        </if>
        <include cond="FORMAT=='msevc4prj'">$(TOP_SRCDIR)build/wince/missing</include>
    </template>

    <!-- Template used for all libs -->
    <template id="anylib">
        <dirname>$(LIBDIRNAME)</dirname>
        <install-to>$(LIBDIR)</install-to>
    </template>

    <template id="3rdparty_lib" template="common_settings,anylib">
        <if cond="FORMAT=='autoconf'">
            <libname>$(id)$(RHEIA_LIB_FLAVOUR)-$(RHEIA_RELEASE)$(HOST_SUFFIX)</libname>
        </if>
        <if cond="FORMAT!='autoconf'">
            <libname>$(id)$(RHEIADEBUGFLAG)$(HOST_SUFFIX)</libname>
        </if>
        <!--
        we want to install 3rd party libs system-wide only with static
        version of wxWidgets; otherwise they are embedded in shared libs:
        -->
        <install-if>SHARED=='0'</install-if>
        <pic>$(substituteFromDict(SHARED, {'0':'off', '1':'on'}))</pic>

        <!--
            we don't want to have asserts in the 3rd party libraries code,
            neither we nor wx users are interested in debugging them anyhow
         -->
        <define>NDEBUG</define>

        <if cond="IS_MSVC">
            <!--
                we're not interested in deprecation warnings about the use of
                standard C functions in the 3rd party libraries (these warnings
                are only given by VC8+ but it's simpler to just always define
                this symbol which disables them, even for previous VC versions)
             -->
            <define>_CRT_SECURE_NO_WARNINGS</define>
        </if>
    </template>

    <define-tag name="msvc-headers" rules="dll,lib">
        <if cond="IS_MSVC_PRJ">
            <msvc-project-files>
                $(addPrefixToList('include\\', rheia.headersOnly(value)))
            </msvc-project-files>
        </if>
    </define-tag>

    <template id="rheia3rdparty" template="common_settings">
        <set var="rheiaid">$(rheia.mk_rheiaid(id))</set>
        <define>__RHEIA$(TOOLKIT)__</define>
        <define>$(DEBUG_DEFINE)</define>
        <define>$(NDEBUG_DEFINE)</define>
        <lib-path>$(LIBDIRNAME)</lib-path>
        <if cond="TOOLKIT=='MGL' and FORMAT=='watcom'">
            <lib-path>$(MGLLIBPATH)</lib-path>
            <lib-path>$(MGLLIBPATH)/$(MGLPMLIBPATH)</lib-path>
        </if>

        <warnings>max</warnings>
        <cxxflags cond="FORMAT=='autoconf'">$(CXXWARNINGS)</cxxflags>
        <cppflags-watcom>
            -wcd=549 <!-- 'sizeof' operand contains compiler generated information -->
            -wcd=656 <!-- define this function inside its class definition (may improve code quality) -->
            -wcd=657 <!-- define this function inside its class definition (could have improved code quality) -->
            -wcd=667 <!-- 'va_start' macro will not work without an argument before '...' -->
        </cppflags-watcom>
        <cxxflags-mingw>
            -Wno-ctor-dtor-privacy <!-- only defines a private destructor and has no friends -->
        </cxxflags-mingw>
    </template>

    <template id="rheia3rdparty_append_base_nomono">

        <!-- system libraries on os2: -->
        <if cond="FORMAT!='autoconf' and PLATFORM_OS2=='1'">
            <if cond="FORMAT=='watcom'">
                <sys-lib>upm32</sys-lib>
            </if>
        </if>

        <!-- system libraries on mgl: -->
        <if cond="FORMAT=='watcom' and TOOLKIT=='MGL'">
            <sys-lib>mgl</sys-lib>
            <sys-lib>mglcpp</sys-lib>
            <sys-lib>pm</sys-lib>
        </if>

        <!-- system libraries on windows: -->
        <if cond="FORMAT!='autoconf' and PLATFORM_WIN32=='1'">
            <sys-lib>$(UNICOWS_LIB)</sys-lib>
            <if cond="FORMAT=='borland'">
                <sys-lib>ole2w32</sys-lib>
            </if>
            <if cond="FORMAT=='msevc4prj'">
                <sys-lib>ole32</sys-lib>
                <sys-lib>oleaut32</sys-lib>
                <sys-lib>uuid</sys-lib>
                <sys-lib>commctrl</sys-lib>
                <sys-lib>winsock</sys-lib>
                <sys-lib>wininet</sys-lib>
            </if>
            <if cond="FORMAT!='borland' and FORMAT!='msevc4prj'">
                <sys-lib>kernel32</sys-lib>
                <sys-lib>user32</sys-lib>
                <sys-lib>gdi32</sys-lib>
                <sys-lib>comdlg32</sys-lib>
                <sys-lib>winspool</sys-lib>
                <sys-lib>winmm</sys-lib>
                <sys-lib>shell32</sys-lib>
                <sys-lib>comctl32</sys-lib>
                <sys-lib>ole32</sys-lib>
                <sys-lib>oleaut32</sys-lib>
                <sys-lib>uuid</sys-lib>
                <sys-lib>rpcrt4</sys-lib>
                <sys-lib>advapi32</sys-lib>
                <sys-lib>wsock32</sys-lib>
                <!-- this one is only used if wxUSE_URL_NATIVE==1 but we don't
                     know if it is here so just add it unconditionally -->
                <sys-lib>wininet</sys-lib>
            </if>
            <if cond="FORMAT=='borland'">
                <sys-lib>oleacc</sys-lib>
            </if>
        </if>
    </template>


    <!-- for GUI libs/samples: -->
    <template id="rheia3rdparty_append_nomono" template_append="rheia3rdparty_append_base_nomono">
    </template>


    <template id="rheia3rdparty_append_base" template_append="rheia3rdparty_append_base_nomono">
        <!-- Always link against the rheia library in monolithic build: -->
    </template>

    <template id="rheia3rdparty_append" template_append="rheia3rdparty_append_nomono">
        <!-- Always link against the wxWin library in monolithic build: -->
    </template>

    <template id="rheia3rdparty_lib_b" template="rheia3rdparty,anylib">
        <set var="RHEIALIBNAME">$(rheia.mkLibName(rheiaid))</set>
        <libname>$(RHEIALIBNAME)</libname>
        <define>RHEIABUILDING</define>
    </template>

    <template id="rheia3rdparty_dll_b" template="rheia3rdparty_lib_b">
        <set var="RHEIADLLNAME">$(rheia.mkDllName(rheiaid))</set>
        <dllname>$(RHEIADLLNAME)</dllname>
        <version>$(RHEIA_VERSION)</version>
        <so_version>$(RHEIASOVERSION)</so_version>

        <!-- FIXME: until libtool scheme is implemented in bakefile -->
        <ldflags cond="FORMAT=='autoconf'">$(RHEIAMACVERSION_CMD)</ldflags>

        <!-- version info resources: -->
        <res-define>RHEIADLLNAME=$(RHEIADLLNAME)</res-define>
        <if cond="FORMAT=='autoconf'">
            <res-include>$(TOP_SRCDIR)include</res-include>
            <postlink-command>$(DYLIB_RPATH_POSTLINK)</postlink-command>
        </if>
        <win32-res>$(RHEIATOPDIR)src/msw/version.rc</win32-res>       
    </template>

    <template id="rheia_dll_3rdparty"
              template="rheia3rdparty_dll_b"
              template_append="rheia3rdparty_append_nomono"/>
    <template id="rheia_base_dll_3rdparty"
              template="rheia3rdparty_dll_b"
              template_append="rheia3rdparty_append_base_nomono">
    </template>

    <!-- =============================================================== -->
    <!--                         3rd party libs:                         -->
    <!-- =============================================================== -->

    <!-- 3rd party libraries: -->
    <include file="irrlicht.bkl"/>
    <include file="plplot.bkl"/>
    <include file="wxplplot.bkl"/>
    <include file="webconnect.bkl"/>

    <!-- =============================================================== -->
    <!--                  Templates for Rheia libs:                  -->
    <!-- =============================================================== -->

    <set var="EXTRALIBS_FOR_BASE">
        <if cond="MONOLITHIC=='1'">$(EXTRALIBS)</if>
        <if cond="MONOLITHIC=='0'">$(EXTRALIBS)</if>
    </set>

    <if cond="TOOLKIT=='MGL' and FORMAT=='watcom'">
        <set var="MGLLIBPATH">$(DOLLAR)(%SCITECH)/lib/$(BUILD)/dos32/ow10</set>
        <set var="MGLPMLIBPATH">
            <if cond="DOS32=='DOS4GW'">dos4gw</if>
        </set>
    </if>

    <template id="rheia" template="common_settings">
        <set var="rheiaid">$(rheia.mk_rheiaid(id))</set>
        <define>__RHEIA$(TOOLKIT)__</define>
        <define>$(DEBUG_DEFINE)</define>
        <define>$(NDEBUG_DEFINE)</define>
        <include>$(TOP_SRCDIR)include</include>
        <include>$(TOP_SRCDIR)include/rheia</include>
        <include>$(TOP_SRCDIR)include/rheia/utils</include>
        <include>$(TOP_SRCDIR)include/rheia/base</include>
        <include>$(TOP_SRCDIR)include/rheia/loggers</include>
        <include>$(TOP_SRCDIR)include/rheia/packagemgt</include>
        <include>$(TOP_SRCDIR)include/rheia/workspacemgt</include>
        <include>$(TOP_SRCDIR)include/rheia/editor</include>
        <include>$(TOP_SRCDIR)include/rheia/python</include>
        <include>$(TOP_SRCDIR)include/csirocsa</include>
        <include>$(TOP_SRCDIR)include/qsastime</include>
        <include>$(TOP_SRCDIR)include/irrlicht</include>
        <include>$(TOP_SRCDIR)include/plplot</include>
        <include>$(TOP_SRCDIR)include/wxplplot</include>
        <include>$(TOP_SRCDIR)include/wxwidgets</include>
        <include>$(TOP_SRCDIR)webconnect/include</include>
        <lib-path>$(LIBDIRNAME)</lib-path>
        <if cond="TOOLKIT=='MGL' and FORMAT=='watcom'">
            <lib-path>$(MGLLIBPATH)</lib-path>
            <lib-path>$(MGLLIBPATH)/$(MGLPMLIBPATH)</lib-path>
        </if>

        <warnings>max</warnings>
        <cxxflags cond="FORMAT=='autoconf'">$(CXXWARNINGS)</cxxflags>
        <cppflags-watcom>
            -wcd=549 <!-- 'sizeof' operand contains compiler generated information -->
            -wcd=656 <!-- define this function inside its class definition (may improve code quality) -->
            -wcd=657 <!-- define this function inside its class definition (could have improved code quality) -->
            -wcd=667 <!-- 'va_start' macro will not work without an argument before '...' -->
        </cppflags-watcom>
        <cxxflags-mingw>
            -Wno-ctor-dtor-privacy <!-- only defines a private destructor and has no friends -->
        </cxxflags-mingw>
    </template>
	
    <template id="rheia_append_base_nomono_irr" cond="USE_IRRLICHT='1'">

    </template>

    <template id="rheia_append_base_nomono_plplot" cond="USE_PLPLOT=='1'">

    </template>

    <template id="rheia_append_base_nomono" template_append="rheia_append_base_nomono_irr,rheia_append_base_nomono_plplot">
        <!-- link against builtin 3rd party libs, if needed: -->
        <ldlibs>$(EXTRALIBS_FOR_BASE)</ldlibs>

        <!-- system libraries on os2: -->
        <if cond="FORMAT!='autoconf' and PLATFORM_OS2=='1'">
            <if cond="FORMAT=='watcom'">
                <sys-lib>upm32</sys-lib>
            </if>
        </if>

        <!-- system libraries on mgl: -->
        <if cond="FORMAT=='watcom' and TOOLKIT=='MGL'">
            <sys-lib>mgl</sys-lib>
            <sys-lib>mglcpp</sys-lib>
            <sys-lib>pm</sys-lib>
        </if>

        <!-- system libraries on windows: -->
        <if cond="FORMAT!='autoconf' and PLATFORM_WIN32=='1'">
            <sys-lib>$(UNICOWS_LIB)</sys-lib>
            <if cond="FORMAT=='borland'">
                <sys-lib>ole2w32</sys-lib>
            </if>
            <if cond="FORMAT=='msevc4prj'">
                <sys-lib>ole32</sys-lib>
                <sys-lib>oleaut32</sys-lib>
                <sys-lib>uuid</sys-lib>
                <sys-lib>commctrl</sys-lib>
                <sys-lib>winsock</sys-lib>
                <sys-lib>wininet</sys-lib>
            </if>
            <if cond="FORMAT!='borland' and FORMAT!='msevc4prj'">
                <sys-lib>kernel32</sys-lib>
                <sys-lib>user32</sys-lib>
                <sys-lib>gdi32</sys-lib>
                <sys-lib>comdlg32</sys-lib>
                <sys-lib>winspool</sys-lib>
                <sys-lib>winmm</sys-lib>
                <sys-lib>shell32</sys-lib>
                <sys-lib>comctl32</sys-lib>
                <sys-lib>ole32</sys-lib>
                <sys-lib>oleaut32</sys-lib>
                <sys-lib>uuid</sys-lib>
                <sys-lib>rpcrt4</sys-lib>
                <sys-lib>advapi32</sys-lib>
                <sys-lib>wsock32</sys-lib>
                <!-- this one is only used if wxUSE_URL_NATIVE==1 but we don't
                     know if it is here so just add it unconditionally -->
                <sys-lib>wininet</sys-lib>
            </if>
            <if cond="FORMAT=='borland'">
                <sys-lib>oleacc</sys-lib>
            </if>
        </if>
    </template>


    <!-- for GUI libs/samples: -->
    <template id="rheia_append_nomono" template_append="rheia_append_base_nomono">
    </template>


    <template id="rheia_append_base" template_append="rheia_append_base_nomono">
        <!-- Always link against the rheia library in monolithic build: -->
        <sys-lib>$(RHEIALIB_MONO)</sys-lib>
    </template>
    <template id="rheia_append" template_append="rheia_append_nomono">
        <!-- Always link against the wxWin library i$(WXCONFIG_PATH)/n monolithic build: -->
        <sys-lib>$(RHEIALIB_MONO)</sys-lib>
    </template>

    <template id="rheia_lib_b" template="rheia,anylib">
        <set var="RHEIALIBNAME">$(rheia.mkLibName(rheiaid))</set>
        <libname>$(RHEIALIBNAME)</libname>
        <define>RHEIABUILDING</define>
    </template>

    <template id="rheia_dll_b" template="rheia_lib_b">
        <set var="RHEIADLLNAME">$(rheia.mkDllName(rheiaid))</set>
        <dllname>$(RHEIADLLNAME)</dllname>
        <version>$(RHEIA_VERSION)</version>
        <so_version>$(RHEIASOVERSION)</so_version>

        <!-- FIXME: until libtool scheme is implemented in bakefile -->
        <ldflags cond="FORMAT=='autoconf'">$(RHEIAMACVERSION_CMD)</ldflags>

        <!-- version info resources: -->
        <res-define>RHEIADLLNAME=$(RHEIADLLNAME)</res-define>
        <if cond="FORMAT=='autoconf'">
            <res-include>$(TOP_SRCDIR)include</res-include>
            <postlink-command>$(DYLIB_RPATH_POSTLINK)</postlink-command>
        </if>
        <win32-res>$(RHEIATOPDIR)src/msw/version.rc</win32-res>
        
    </template>
    
    <template id="rheia_irrlicht_dependencies" cond="USE_IRRLICHT=='1'">
        <depends>irrlicht</depends>
	<library>$(RHEIALIB_IRRLICHT)</library>
    </template>

    <template id="rheia_plplot_dependencies" cond="USE_PLPLOT=='1'">
        <depends>plplot</depends>
        <depends>wxplplot</depends>
	<library>$(RHEIALIB_PLPLOT))</library>
	<library>$(RHEIALIB_WXPLPLOT)</library>
    </template>

    <template id="rheia_3rdparty_dependencies" template="rheia_irrlicht_dependencies,rheia_plplot_dependencies">
	<depends>webconnect</depends>
	<library>$(RHEIALIB_WEBCONNECT)</library>
    </template>

    <template id="rheia_irrlicht_includes" cond="USE_IRRLICHT=='1'">
        <include>$(INC_IRRLICHT)</include>
    </template>

    <template id="rheia_plplot_includes" cond="USE_PLPLOT=='1'">
        <include>$(TOP_SRCDIR)include/plplot</include>
        <include>$(TOP_SRCDIR)include/wxwidgets</include>
        <include>$(TOP_SRCDIR)include/csirocsa</include>
        <include>$(TOP_SRCDIR)include/qsastime</include>
        <include>$(TOP_SRCDIR)include/wxplplot</include>
    </template>

    <template id="rheia_3rdparty_includes" template="rheia_irrlicht_includes,rheia_plplot_includes">
        <include>$(INC_WEBCONNECT)</include>
    </template>

    <template id="rheia_dll"
              template="rheia_dll_b,rheia_3rdparty_includes"
              template_append="rheia_append_nomono"/>
    <template id="rheia_base_dll"
              template="rheia_dll_b,rheia_3rdparty_includes"
              template_append="rheia_append_base_nomono">
    </template>

    <!-- =============================================================== -->
    <!--               Support for wxWidgets samples:                    -->
    <!-- =============================================================== -->

    <!-- Link against one wxWin library. Value must be literal! -->
    <define-tag name="rheia-lib" rules="exe,dll,module">
        <sys-lib>$(rheia.libToLink(value))</sys-lib>
        <ldlibs>$(rheia.extraLdflags(value))</ldlibs>
        <!-- msvs200?prj formats don't support external dependencies yet: -->
        <if cond="FORMAT in ['msvc6prj','msevc4prj'] and MONOLITHIC=='0'">
            <depends-on-dsp>$(rheia.makeDspDependency(value))</depends-on-dsp>
        </if>
    </define-tag>


    <!-- A hack to keep autoconf happy (we pass CPPFLAGS that contain
         {top_srcdir} from configure, poor bakefile can't know that
         and won't output top_srcdir = @top_srcdir@ line): -->
    <set var="VARS_DONT_ELIMINATE" append="1">top_srcdir</set>
</makefile>
