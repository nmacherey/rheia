dnl Process this file with autoconf to produce a configure script.
AC_REVISION(Nicolas Macherey)
dnl

AC_PREREQ(2.58)

dnl ---------------------------------------------------------------------------
dnl Top-level configure.in for Rheia by Nicolas Macherey
dnl ---------------------------------------------------------------------------

dnl ---------------------------------------------------------------------------
dnl initialization
dnl ---------------------------------------------------------------------------

AC_INIT([Rheia Framework], [2.0.0], [info@rheia-framework.com])

	dnl the file passed to AC_CONFIG_SRCDIR should be specific to our package
dnl AC_CONFIG_SRCDIR([rheia-config.in])
dnl the file passed to AC_CONFIG_SRCDIR should be specific to our package
AC_CONFIG_SRCDIR([rheia-config.in])
AC_CONFIG_SRCDIR([autoconf_inc.m4])
AC_CANONICAL_HOST

	
	
dnl notice that if --host was given but --build was not, cross_compiling is
dnl only set to "maybe" and not "yes" and will be either set to "yes" later or
dnl configure will exit with error in AC_PROG_CC so don't test for = "yes" here
if test "$cross_compiling" != "no"; then 
    HOST_PREFIX="${host_alias}-"
    HOST_SUFFIX="-$host_alias"
else
    HOST_PREFIX=
    HOST_SUFFIX=
fi
AC_SUBST(HOST_SUFFIX)


dnl When making releases do:
dnl
dnl rheia_release_number += 1

rheia_major_version_number=2
rheia_minor_version_number=0
rheia_release_number=0
rheia_subrelease_number=0

RHEIA_RELEASE=$rheia_major_version_number.$rheia_minor_version_number
RHEIA_VERSION=$RHEIA_RELEASE.$rheia_release_number
RHEIA_SUBVERSION=$RHEIA_VERSION.$rheia_subrelease_number

RHEIA_MSW_VERSION=$rheia_major_version_number$rheia_minor_version_number$rheia_release_number

AC_SUBST(RHEIA_RELEASE)
AC_SUBST(RHEIA_VERSION)
AC_SUBST(RHEIA_SUBVERSION)
AC_SUBST(RHEIA_MSW_VERSION)

dnl Autoconf-2.60 changed the meaning of top_builddir variable, so we have
dnl to use our own replacement that will work with both 2.5x and 2.60+:
rheia_top_builddir="`pwd`"

AC_SUBST(rheia_top_builddir)

mkdir -p $rheia_top_builddir/lib
mkdir -p $rheia_top_builddir/bin


dnl Enable the debug information
DEBUG_INFO=0
DEBUG_FLAG=0
BUILD=release

AC_ARG_ENABLE([debug],
    AS_HELP_STRING([--enable-debug], [Enable feature debug]))

AS_IF([test "x$enable_debug" = "xyes"], [
  DEBUG_INFO=1
  DEBUG_FLAG=1
  BUILD=debug
])

AC_SUBST(DEBUG_INFO)
AC_SUBST(DEBUG_FLAG)
AC_SUBST(BUILD)

SHARED=1
AC_SUBST(SHARED)

RHEIA_UNIV=0
AC_SUBST(RHEIA_UNIV)


dnl Enable or no unicode build
UNICODE=0
RHEIA_CHARTYPE="ansi"
lib_unicode_suffix=
AC_ARG_ENABLE([unicode],
    AS_HELP_STRING([--enable-unicode], [Enable feature unicode]))

AS_IF([test "x$enable_unicode" = "xyes"], [
  UNICODE=1
  RHEIA_CHARTYPE="unicode"
  lib_unicode_suffix=u
])

AC_SUBST(UNICODE)
AC_SUBST(RHEIA_CHARTYPE)

dnl check if we are using wx29 libraries or not
USE_WX29=0
AC_ARG_ENABLE([wx29],
    AS_HELP_STRING([--enable-wx29], [Link against wx29 libraries]))

AS_IF([test "x$enable_wx29" = "xyes"], [
  USE_WX29=1
])

AC_SUBST(USE_WX29)

dnl Enable monolithic buil
MONOLITHIC=0
AC_ARG_ENABLE(monolithic,
		[--enable-monolithic 	Build all rheia libs in the same library],
		USE_MONOLITHIC="enableval", USE_MONOLITHIC="no")

if test $USE_MONOLITHIC = yes ; then
  MONOLITHIC=1
fi

AC_SUBST(MONOLITHIC)

dnl Disable exceptions
USE_EXCEPTIONS=1
AC_SUBST(USE_EXCEPTIONS)

dnl Disbale threading
USE_THREADS=1
AC_SUBST(USE_THREADS)

dnl vendor name
AC_ARG_ENABLE(vendor,  [  --enable-vendor=VENDOR  vendor name (win32 DLL only)], [VENDOR="$enableval"])
if test "x$VENDOR" = "x"; then
    VENDOR="custom"
fi
AC_SUBST(VENDOR)

dnl Rheia flavour
AC_ARG_WITH(flavour,       [  --with-flavour=NAME     specify a name to identify this build], [RHEIA_FLAVOUR="$withval"])

RHEIA_FLAVOUR=${RHEIA_FLAVOUR:+-$RHEIA_FLAVOUR}
RHEIA_LIB_FLAVOUR=`echo $RHEIA_FLAVOUR | tr '-' '_'`

AC_SUBST(RHEIA_FLAVOUR)
AC_SUBST(RHEIA_LIB_FLAVOUR)

dnl specify if we are using irrlicht and plplot
WX_ARG_WITHOUT(irrlicht,   [  --without-irrlicht    ], rheiaUSE_IRRLICHT)
WX_ARG_WITHOUT(plplot,   [  --without-plplot    ], rheiaUSE_PLPLOT)

USE_IRRLICHT=0
if test "$rheiaUSE_IRRLICHT" != "no" ; then
    USE_IRRLICHT=1
fi
AC_SUBST(USE_IRRLICHT)

USE_PLPLOT=0
if test "$rheiaUSE_PLPLOT" != "no" ; then
    USE_PLPLOT=1
fi
AC_SUBST(USE_PLPLOT)

dnl information for toolkit

dnl the list of all available toolkits
dnl
dnl update NUM_TOOLKITS calculation below when adding a new toolkit here!
ALL_TOOLKITS="COCOA GTK OSX_CARBON OSX_COCOA OSX_IPHONE MGL MICROWIN MOTIF MSW PM X11 DFB"
TOOLKIT=GTK

AC_ARG_WITH(gtk,          [[  --with-gtk[=VERSION]    use GTK+, VERSION can be 2 (default), 1 or "any"]], [rheiaUSE_GTK="$withval" CACHE_GTK=1 TOOLKIT=GTK])
AC_ARG_WITH(motif,         [  --with-motif            use Motif/Lesstif], [rheiaUSE_MOTIF="$withval" CACHE_MOTIF=1 TOOLKIT=MOTIF])
AC_ARG_WITH(osx_carbon,    [  --with-osx_carbon       use Mac OS X (Carbon)], [rheiaUSE_OSX_CARBON="$withval" CACHE_OSX_CARBON=1 TOOLKIT=OSX_CARBON])
AC_ARG_WITH(osx_cocoa,     [  --with-osx_cocoa        use Mac OS X (Cocoa)], [rheiaUSE_OSX_COCOA="$withval" CACHE_OSX_COCOA=1 TOOLKIT=OSX_COCOA])
AC_ARG_WITH(osx_iphone,    [  --with-osx_iphone       use iPhone OS X port], [rheiaUSE_OSX_IPHONE="$withval" CACHE_OSX_IPHONE=1 TOOLKIT=OSX_IPHONE])
AC_ARG_WITH(osx,           [  --with-osx              use Mac OS X (default port, currently Carbon)], [rheiaUSE_OSX_CARBON="$withval" CACHE_OSX_CARBON=1 TOOLKIT=OSX])
AC_ARG_WITH(carbon,        [  --with-carbon           same as --with-osx_carbon], [rheiaUSE_OSX_CARBON="$withval" CACHE_OSX_CARBON=1 TOOLKIT=CARBON])
AC_ARG_WITH(cocoa,         [  --with-cocoa            same as --with-osx_cocoa], [rheiaUSE_OSX_COCOA="$withval" CACHE_OSX_COCOA=1 TOOLKIT=COCOA])
AC_ARG_WITH(iphone,        [  --with-iphone           same as --with-osx_iphone], [rheiaUSE_OSX_IPHONE="$withval" CACHE_OSX_IPHONE=1 TOOLKIT=IPHONE])
AC_ARG_WITH(mac,           [  --with-mac              same as --with-osx], [rheiaUSE_OSX_CARBON="$withval" CACHE_OSX_CARBON=1 TOOLKIT=MAC])
AC_ARG_WITH(old_cocoa,     [  --with-old_cocoa        use old, deprecated, Cocoa port], [rheiaUSE_OLD_COCOA="$withval" CACHE_OLD_COCOA=1 TOOLKIT=OLD_COCOA])
AC_ARG_WITH(wine,          [  --with-wine             use Wine], [rheiaUSE_WINE="$withval" CACHE_WINE=1 TOOLKIT=WINE])
AC_ARG_WITH(msw,           [  --with-msw              use MS-Windows], [rheiaUSE_MSW="$withval" CACHE_MSW=1 TOOLKIT=MSW])
AC_ARG_WITH(pm,            [  --with-pm               use OS/2 Presentation Manager], [rheiaUSE_PM="$withval" CACHE_PM=1 TOOLKIT=PM])
AC_ARG_WITH(mgl,           [  --with-mgl              use SciTech MGL], [rheiaUSE_MGL="$withval" rheiaUSE_UNIVERSAL="yes" CACHE_MGL=1 TOOLKIT=MGL])
AC_ARG_WITH(directfb,      [  --with-directfb         use DirectFB], [rheiaUSE_DFB="$withval" rheiaUSE_UNIVERSAL="yes" CACHE_DFB=1 TOOLKIT=DIRECTFB])
AC_ARG_WITH(microwin,      [  --with-microwin         use MicroWindows], [rheiaUSE_MICROWIN="$withval" CACHE_MICROWIN=1 TOOLKIT=MICROWIN])
AC_ARG_WITH(x11,           [  --with-x11              use X11], [rheiaUSE_X11="$withval" rheiaUSE_UNIVERSAL="yes" CACHE_X11=1 TOOLKIT=X11])	
	
if test "$TOOLKIT" = "GTK" ; then
	TOOLKIT_VERSION=2
fi

TOOLKIT_LOWERCASE=`echo $TOOLKIT | tr '[[A-Z]]' '[[a-z]]'`
TOOLKIT_DIR="$TOOLKIT_LOWERCASE"

AC_SUBST(TOOLKIT)
AC_SUBST(TOOLKIT_LOWERCASE)
AC_SUBST(TOOLKIT_VERSION)
AC_SUBST(TOOLKI_DIR)

dnl cxx warnings

dnl CXXWARNINGS="-Wall -Wundef -Wunused-parameter -Wno-ctor-dtor-privacy"
CXXWARNINGS=
dnl when building under Mac we currently get hundreds of deprecation
dnl warnings for Carbon symbols from the standard headers -- disable them
dnl as we already know that they're deprecated and nothing else can be seen
dnl with these warnings on
if test "$rheiaUSE_MAC" = 1 ; then
    CXXWARNINGS="$CXXWARNINGS -Wno-deprecated-declarations"
fi
AC_SUBST(CXXWARNINGS)

AC_SUBST(EXTRALIBS)

dnl dylib path

DYLIB_RPATH_INSTALL=
DYLIB_RPATH_POSTLINK=
	
AC_SUBST(DYLIB_RPATH_INSTALL)
AC_SUBST(DYLIB_RPATH_POSTLINK)

dnl variables relaated to rheia-config script
STD_BASE_LIBS="utils base loggers workspacemgt packagemgt editor python"
BUILT_RHEIA_LIBS="$STD_BASE_LIBS"
ALL_RHEIA_LIBS="$BUILT_RHEIA_LIBS"

if test "$rheiaUSE_IRRLICHT" = "yes" ; then
    STD_BASE_LIBS="irrlicht $STD_BASE_LIBS"
    BUILT_RHEIA_LIBS="irrlicht $BUILT_RHEIA_LIBS"
fi
if test "$rheiaUSE_PLPLOT" = "yes" ; then
    STD_BASE_LIBS="plplot wxplplot $STD_BASE_LIBS"
    BUILT_RHEIA_LIBS="plplot wxplplot $BUILT_RHEIA_LIBS"
fi

AC_SUBST(ALL_RHEIA_LIBS)
AC_SUBST(BUILT_RHEIA_LIBS)
AC_SUBST(STD_BASE_LIBS)


dnl bind egrep
EGREP=egrep
AC_SUBST(EGREP)


dnl base library name

WIDGET_SET=

if test "${TOOLKIT_DIR}" = "os2"; then
    RHEIA_LIBRARY_BASENAME_GUI="rheia_pm${WIDGET_SET}${lib_unicode_suffix}${RHEIA_LIB_FLAVOUR}"
else
    RHEIA_LIBRARY_BASENAME_GUI="rheia_${TOOLKIT_DIR}${TOOLKIT_VERSION}${WIDGET_SET}${lib_unicode_suffix}${RHEIA_LIB_FLAVOUR}"
fi
RHEIA_LIBRARY_BASENAME_NOGUI=$RHEIA_LIBRARY_BASENAME_GUI
AC_SUBST(RHEIA_LIBRARY_BASENAME_GUI)
AC_SUBST(RHEIA_LIBRARY_BASENAME_NOGUI)

dnl RHIEACONFIG_LDFLAGS
RHEIACONFIG_LDFLAGS=
AC_SUBST(RHEIACONFIG_LDFLAGS)

RHEIACONFIG_CPPFLAGS=
RHEIACONFIG_CFLAGS=
AC_SUBST(RHEIACONFIG_CFLAGS)
AC_SUBST(RHEIACONFIG_CPPFLAGS)

dnl TOOLCHAIN_FULLNAME
TOOLCHAIN_FULLNAME=rheia-config
AC_SUBST(TOOLCHAIN_FULLNAME)
	
AC_BAKEFILE([m4_include(autoconf_inc.m4)])
AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([ lib/rheia/config/rheia-config:rheia-config.in ],
                [ chmod +x lib/rheia/config/rheia-config ])

AC_OUTPUT


